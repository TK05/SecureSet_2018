systems
security
secure
coding
gary
whitsett
september
secureset
all
rights
reserved
learning
objectives
at
the
end
of
this
you
should
be
able
describe
owasp
secure
coding
practices
create
and
use
python
filter
and
lambda
functions
describe
and
create
directory
traversals
describe
and
implement
chroot
jails
describe
and
implement
command
using
and
use
the
back
tick
and
to
embed
code
secureset
all
rights
reserved
owasp
secure
coding
discuss
owasp
secure
coding
guidelines
secureset
all
rights
reserved
secure
coding
security
mechanisms
built
into
code
less
expensive
to
build
in
initially
application
level
of
the
osi
model
secureset
all
rights
reserved
input
validation
data
validation
classify
data
as
trusted
vs
untrusted
always
validate
untrusted
complete
on
trusted
system
use
specific
encode
to
a
common
character
set
failures
rejection
secureset
all
rights
reserved
input
validation
validate
data
types
validate
date
ranges
validate
lengths
use
a
whitelist
of
if
possible
escape
characters
or
strip
secureset
all
rights
reserved
output
encoding
encode
on
trusted
system
sanitize
output
from
ldap
sanitize
output
from
untrusted
sources
secureset
all
rights
reserved
authentication
and
passwords
establish
and
utilize
trusted
authentication
authority
authentication
should
fail
securely
segregate
authentication
logic
generic
response
username
use
input
type
authentication
disabling
authentication
secureset
all
rights
reserved
session
management
ensure
sufficiently
random
session
ids
domain
and
path
in
cookies
secure
logout
ends
session
id
new
session
id
with
reauthentication
periodically
generate
new
session
id
secureset
all
rights
reserved
access
control
access
control
fails
securely
deny
all
access
if
it
cannot
access
security
info
restrict
access
to
to
limit
number
of
transactions
secureset
all
rights
reserved
cryptographic
properties
implement
on
trusted
system
fips
establish
and
utilize
key
policy
secureset
all
rights
reserved
general
coding
practices
use
tested
and
approved
managed
code
use
hashes
to
verify
utilize
locking
mechanisms
to
prevent
race
conditions
raise
privileges
as
late
as
possible
and
drop
immediately
after
use
secureset
all
rights
reserved
directory
traversals
allows
access
to
files
and
directories
outside
the
web
root
folder
normally
against
http
apache
files
default
secureset
all
rights
reserved
encoding
secureset
all
rights
reserved
usage
examples
secureset
all
rights
reserved
protecting
against
traversals
know
your
server
vulnerabilities
ensure
user
supply
complete
path
only
accept
known
good
input
not
sanitize
use
chrooted
jails
normalize
data
secureset
all
rights
reserved
chroot
jail
allows
a
directory
tree
to
appear
as
root
directory
normally
a
user
cannot
move
beyond
the
root
jail
breaking
the
usually
needs
root
privileges
secureset
all
rights
reserved
why
use
testing
and
development
dependency
control
compatibility
recovery
privilege
separation
secureset
all
rights
reserved
command
chaining
logical
and
logical
or
pipe
ampersand
redirection
secureset
all
rights
reserved
command
chaining
using
run
commands
sequentially
sudoapt
update
sudoapt
upgrade
can
be
used
for
bash
injection
attacks
secureset
all
rights
reserved
command
chaining
using
runs
command
in
the
background
ls
ping
runs
both
commands
simultaneously
sudoapt
update
sudoapt
upgrade
secureset
all
rights
reserved
command
chaining
using
first
command
must
complete
successfully
code
secureset
all
rights
reserved
command
chaining
using
first
command
must
fail
code
mkdir
ping
echo
seems
secureset
all
rights
reserved
command
chaining
using
output
of
first
command
is
passed
to
second
command
secureset
all
rights
reserved
command
combination
output
of
first
command
is
passed
to
second
command
touch
secureset
all
rights
reserved
command
precedence
ensure
commands
execute
in
the
proper
order
secureset
all
rights
reserved
backtick
commands
backtick
is
command
substitution
evaluates
command
in
and
provide
its
results
as
arguments
to
the
command
can
also
be
used
secureset
all
rights
reserved
tools
and
utilities
i
overview
llc
syllabus
llc
module
objectives
gain
a
working
knowledge
of
the
tools
and
utilities
in
the
and
llc
awk
crontab
ed
date
dstat
df
du
file
find
free
grep
head
llc
iotop
ip
addr
link
maddr
route
od
x
kill
logrotate
llc
ln
lsof
ping
pstree
nohup
sar
sed
iostat
netstat
nfsstat
tail
llc
ss
stty
echo
is
all
tr
e
llc
debugging
tools
gdb
strace
strace
strace
myprogram
strace
strace
strings
llc
strace
exercise
bring
up
two
terminals
side
by
side
on
the
left
enter
and
record
the
pid
of
the
bash
shell
on
the
right
enter
on
the
left
enter
observe
the
window
on
the
right
on
the
left
enter
observe
the
window
on
the
right
llc
dhclient
ethtool
hdparm
hwclock
fdisk
lspci
lspci
llc
parted
sync
llc
lab
find
all
files
that
end
in
and
dump
the
entry
points
to
stdout
use
awk
to
print
out
all
usernames
out
of
to
print
out
all
accounts
that
have
nologin
print
the
date
format
to
be
of
the
form
create
a
hard
link
from
to
confirm
that
the
files
are
identical
write
a
script
to
ping
all
hosts
in
a
given
create
a
file
create
a
crontab
entry
to
print
the
date
to
a
file
every
minute
llc
lab
create
a
log
rotation
policy
for
daily
copies
error
on
missing
file
notifempty
delay
compression
script
if
failed
login
attempts
email
provide
a
use
example
of
tools
and
utilities
in
this
lecture
llc
lab
hard
links
vi
echo
exit
ln
chmod
chmod
llc
lab
create
an
iso
image
of
your
home
directory
and
mount
develop
a
use
case
and
example
for
each
command
presented
in
the
and
sections
of
the
llc
homework
compress
and
time
a
file
using
minimal
compression
using
maximum
compression
describe
the
difference
between
the
two
types
of
compression
create
a
compressed
tar
file
of
all
files
in
except
files
that
are
already
identify
how
many
pci
devices
are
on
your
computer
llc
find
find
empty
directories
find
d
find
empty
files
find
f
find
files
greater
than
find
f
find
files
greater
than
and
less
than
find
find
all
files
accessed
the
hour
find
llc
find
find
all
files
modified
the
hour
find
find
all
files
changed
the
hour
find
find
all
files
modified
between
and
days
find
find
all
files
accessed
the
last
days
find
find
all
files
permissions
of
the
sgid
bit
find
llc
find
find
all
python
scripts
in
directory
of
two
levels
find
find
all
files
permissions
of
find
f
llc
