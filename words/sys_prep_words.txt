introduction
to
information
technology
lizard
computing
llc
louis
romero
about
me
portmanteau
of
linux
and
wizard
liz
tux
course
goal
objective
this
course
offers
a
primer
into
linux
with
the
overarching
goal
of
applying
a
broad
brush
to
the
operating
system
from
a
security
many
of
the
concepts
being
discussed
over
the
next
few
days
will
invariably
be
tied
back
to
the
security
implications
that
devops
needs
to
understand
in
order
to
the
bad
guys
out
of
your
it
outline
administrivia
network
analyzers
the
boot
process
knowledge
persistent
storage
linux
security
ease
of
useshells
interpreterslinux
operating
systems
file
descriptors
windows
von
neumann
architecturepipes
redirectionproc
and
sys
file
systems
architecture
regular
expressionsthe
continuum
cpu
strace
the
grace
hopper
nanosecond
mobo
man
the
math
of
it
all
memory
ldd
static
binding
network
an
information
system
stack
a
network
of
information
systems
the
linux
operating
system
cpu
states
a
process
daemon
model
ip
services
network
encapsulation
a
day
in
the
life
of
a
devops
staffer
administrivia
attendance
labs
homework
class
participation
virtual
machines
whine
cheese
knowledge
things
you
realize
you
know
knowledge
things
you
realize
you
know
things
you
realize
you
know
knowledge
things
you
realize
you
know
secureset
things
you
realize
you
awareness
things
you
realize
you
know
knowledge
having
stated
google
is
your
mindspace
think
like
a
act
with
wrong
with
this
who
has
and
where
is
the
chain
of
custody
for
data
and
configuration
you
see
say
all
about
bring
light
of
day
to
shadow
it
security
ease
of
use
increasing
security
demand
for
simplicity
ease
of
use
security
increasing
difficulty
increasing
security
complexity
ease
of
use
vulnerabilities
pin
swipe
insert
putting
more
weight
on
putting
more
weight
on
security
reduces
reduces
security
measures
security
ease
of
use
ease
of
use
security
the
like
all
things
in
depends
user
entry
behaviour
analysis
defense
in
depth
least
privilege
availability
destroy
expose
good
guys
bad
guys
confidentialit
y
integrity
compromise
cia
ecd
security
is
not
a
cio
it
is
a
ceo
roi
risk
of
incarceration
reputation
damage
to
trade
name
risk
to
stock
price
continuous
improvement
model
visibility
predict
respond
prevent
detect
continuous
improvement
model
where
is
most
of
the
money
being
spent
where
should
the
money
be
amateurs
attack
professionals
attack
pillars
of
a
success
business
model
people
stool
staff
with
the
right
skill
sets
and
properly
trained
process
standard
operating
procedures
business
best
practices
technology
responsibility
and
accountability
technology
peopl
e
process
the
right
tools
and
level
of
automation
to
appropriately
address
business
requirements
business
exposure
points
shipping
storage
services
wiring
closets
crews
electrical
closets
vending
machines
telecom
closets
liquids
accounting
candy
receivables
environmental
payables
hvac
janitorial
buildings
window
cleaners
parking
lots
secure
areas
attacks
perimeter
intrusions
perimeter
breach
breach
on
where
is
it
coming
how
what
are
they
who
are
what
do
they
asset
life
cycle
plan
dispose
acquire
applies
paper
docs
electronic
manage
deploy
stale
structured
unstructured
data
electronic
devices
the
it
complex
model
and
systems
app
app
security
security
appn
it
complex
security
model
system
application
application
security
security
security
data
flow
diagram
upstream
network
egress
system
ingress
netfilter
egress
application
ingress
is
the
technology
financial
online
banking
online
purchasing
enterprise
class
network
servers
applications
is
the
technology
https
starbucks
end
points
smart
phones
iphone
android
ipads
laptops
desktops
retail
pos
online
cloud
space
you
know
in
trouble
you
ask
for
the
corporate
data
retention
policy
and
the
response
is
you
ask
about
it
security
and
they
tell
you
the
entire
infrastructure
is
deployed
in
the
you
ask
about
an
employee
logging
in
at
all
weird
hours
and
hr
tells
you
that
person
worked
here
in
over
six
you
ask
about
aws
or
google
cloud
charges
against
a
corporate
credit
card
and
no
one
knows
about
you
are
talking
you
ask
about
a
and
disaster
recovery
procedures
and
you
are
referred
to
the
person
you
incident
response
is
around
like
your
on
fire
and
hope
someone
wakes
you
executive
lingo
never
tell
an
executive
what
to
always
communicate
ito
risks
and
provide
be
bright
be
brief
be
gone
if
you
fail
to
use
the
appropriate
yoyo
in
summary
visibility
detection
response
user
entity
behavioural
analytics
the
journey
from
the
beginning
when
an
instruction
is
executed
server
when
written
to
memory
when
written
to
storage
when
written
to
the
network
when
written
to
the
when
routed
to
a
destination
when
a
destination
responds
when
the
response
is
routed
to
an
originating
source
server
when
written
to
the
when
written
to
the
systems
systems
app
app
tysecuri
tysecuri
when
written
to
memory
app
app
security
security
when
an
instruction
is
executed
appn
appn
perspective
von
neumann
architecture
cpu
storing
programs
and
data
memory
together
was
a
novel
idea
the
cpu
architecture
ghz
nanoseconds
seconds
cpu
mhz
microseconds
seconds
memory
faster
milliseconds
seconds
khz
architecture
sandy
bridge
cpu
northbound
ram
bridge
dmi
platform
control
hub
southbound
pci
legacy
bridge
usb
dmi
direct
media
interface
bios
isa
ide
intel
history
pentium
i
pentium
ii
xeon
law
still
running
strong
cpu
info
multiple
cpu
multiple
cores
threads
hyperthreading
memory
info
mb
mb
bit
byte
absence
of
prefixes
for
binary
multiples
factor
name
symbol
origin
derivation
examples
and
comparisons
with
si
prefixes
kibi
ki
one
kibibit
kibit
bit
bit
mebi
mi
one
kilobit
kbit
bit
bit
gibi
gi
one
mebibyte
mib
b
b
one
megabyte
mb
b
b
tebi
ti
one
gibibyte
gib
b
b
pebi
pi
one
gigabyte
gb
b
b
exbi
ei
motherboard
mobo
mobo
cpu
cpu
core
core
cpu
core
single
multiple
motherboard
mobo
mobo
cpu
core
cpu
core
core
core
cpu
core
core
single
cpu
multiple
cpus
multiple
cores
multiple
cores
power
power
cooling
cooling
lateny
lateny
motherboard
mobo
mobo
cpu
core
cpu
core
core
core
cpu
core
core
hyperthreading
doubles
the
amount
of
cores
reported
to
the
operating
system
memory
physical
memory
process
a
process
b
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
pfn
physical
memory
physical
memory
physical
memory
layout
end
of
physical
memory
kernel
space
user
space
beginning
of
physical
memory
virtual
memory
layout
end
of
physical
memory
kernel
space
stack
grows
towards
lower
addresses
user
space
beginning
of
physical
memory
virtual
memory
addressing
process
a
process
b
vpfn
vpfn
process
b
process
a
page
table
page
table
vpfn
vpfn
vpfn
pfn
vpfn
vpfn
pfn
vpfn
vpfn
pfn
vpfn
vpfn
pfn
vpfn
vpfn
pfn
vpfn
vpfn
pfn
vpfn
virtual
memory
physical
memory
virtual
memory
swap
space
pfn
physical
disk
pfn
pfn
pfn
pfn
physical
memory
pfn
pfn
pfn
virtual
address
configuration
end
of
memory
kernel
space
dynamic
segments
process
segments
beginning
of
memory
conventional
segment
arrangements
shared
libraries
dynamic
segments
stack
segment
process
data
segment
text
segment
unmapped
virtual
address
configuration
end
of
memory
reserved
system
area
dynamic
segments
process
segments
beginning
of
memory
conventional
segment
arrangements
dynamic
segments
stack
segment
process
data
segment
text
segment
unmapped
ldd
man
ldd
ldd
print
shared
library
dependencies
ldd
man
ldconfg
static
binding
binding
share
libraries
mapped
into
executable
run
time
pros
smaller
cons
dependent
upon
library
being
on
the
system
static
binding
share
libraries
mapped
into
executable
link
time
pros
executable
is
cons
bloats
image
network
protocol
encapsulation
data
network
transport
ip
icmp
data
link
ethernet
frame
an
information
system
stack
security
perfornance
monitor
administration
availability
configuration
application
config
reliability
application
network
config
network
os
services
os
init
kernel
boot
loader
grub
boot
loader
mbr
initialization
bios
firmware
hardware
oss
os
services
acronym
name
arp
address
resolution
protocol
rarp
reverse
address
resolution
protocol
dhcp
dynamic
host
configuration
protocol
dns
distributed
name
service
snmp
simple
network
management
protocol
smtp
simple
mail
transport
protcol
http
hypertext
transfer
protocol
ldap
lightweight
directory
access
protocol
ntp
network
time
protocol
ftp
file
transfer
protocol
a
lan
of
information
systems
security
security
perfornance
perfornance
administration
administration
availability
availability
configuration
configuration
monitor
monitor
application
config
application
config
reliability
reliability
application
application
network
config
network
config
network
network
os
services
os
services
os
os
init
init
kernel
kernel
grub
grub
mbr
mbr
bios
bios
firmware
firmware
hardware
hardware
oss
oss
a
wan
of
information
systems
security
security
security
security
performance
performance
performance
performance
monitor
monitor
monitor
monitor
administration
availability
administration
availability
administration
availability
administration
availability
configuration
configuration
configuration
configuration
application
config
application
config
application
config
application
config
reliability
reliability
reliability
reliability
application
application
application
application
network
config
network
config
network
config
network
config
network
network
network
network
os
services
os
services
os
services
os
services
os
os
os
os
init
init
init
init
kernel
kernel
kernel
kernel
grub
grub
grub
grub
mbr
mbr
mbr
mbr
bios
bios
bios
bios
firmware
firmware
firmware
firmware
hardware
hardware
hardware
hardware
os
os
os
os
s
s
s
s
lan
lan
security
security
security
security
performance
performance
performance
performance
monitor
monitor
monitor
monitor
administration
availability
administration
availability
administration
availability
administration
availability
configuration
configuration
configuration
configuration
application
config
application
config
application
config
application
config
reliability
reliability
reliability
reliability
application
application
application
application
network
config
network
config
network
config
network
config
network
network
network
network
os
services
os
services
os
services
os
services
os
os
os
os
init
init
init
init
kernel
kernel
kernel
kernel
grub
grub
grub
grub
mbr
mbr
mbr
mbr
bios
bios
bios
bios
firmware
firmware
firmware
firmware
hardware
hardware
hardware
hardware
os
os
os
os
s
s
s
s
lan
lan
a
man
of
information
systems
wan
lan
lan
lan
lan
wan
lan
lan
lan
lan
wan
lan
lan
lan
lan
wan
lan
lan
lan
lan
internet
backbone
a
study
of
the
us
infrastructure
ramakrishnan
paul
joel
walter
of
wisconsin
madison
university
it
big
backbone
man
wan
lan
system
the
it
triad
network
systems
applications
the
it
triad
network
systems
security
applications
it
big
s
s
sasc
sd
se
sf
b
g
lan
lan
lan
lan
lan
lan
lan
lan
wan
wan
wan
wan
man
man
backbone
telecommunications
wireless
cellular
cellular
wireless
wired
cellular
long
haul
communications
over
radio
spectrum
cellular
spectrum
carrier
frequency
in
mhz
frequency
in
mhz
lte
frequency
in
mhz
band
name
band
name
band
number
smr
clr
pcs
clr
aws
pcs
no
no
no
umts
no
umts
yes
yes
no
no
yes
yes
yes
yes
no
no
no
gsm
no
umts
umts
yes
no
no
no
yes
yes
no
no
yes
yes
yes
sprint
cdmaon
no
cdmaone
no
no
no
no
no
yes
no
no
yes
no
yes
e
verizon
no
cdmaone
cdmaone
no
no
no
yes
no
yes
yes
yes
no
no
cellular
no
cdmaone
cdmaone
no
yes
no
no
no
yes
yes
yes
no
no
telecommunications
hits
x
headend
ftth
fttc
data
voice
dslam
data
pstn
dsl
data
voice
radio
cellular
network
network
analyzers
packet
analyzer
protocol
analyzer
wireshark
gui
tcpdump
command
line
storage
persistent
storage
theory
disk
drives
duty
cycle
important
sata
scsi
ssd
residential
of
thousands
of
commercial
of
thousands
of
cloud
online
archive
persistent
storage
theory
block
character
devices
block
fiber
channel
iscsi
character
nfs
cifs
afs
xfs
persistent
storage
configuration
mkfs
iscsiadm
persistent
storage
operation
df
du
persistent
storage
raid
redundant
array
of
inexpensive
disks
n
drives
data
parity
drives
concatenate
and
mirror
persistent
storage
drive
can
operate
one
minute
can
write
x
one
hour
can
write
x
resilver
in
hours
resilver
in
hours
best
logical
volume
manager
logical
logical
volume
group
physical
physical
physical
physical
physical
disk
disk
disk
disk
disk
raid
raid
operating
systems
software
that
manages
hardware
and
software
vendor
crm
mgmt
payroll
applications
inventory
pos
mgmt
ssh
apache
mysql
middleware
java
python
postgres
utilities
operating
system
kernel
cpu
hardware
memory
the
linux
operating
system
consists
of
two
subsystems
kernel
linus
torvalds
enough
all
bugs
are
gnu
richard
stallman
corporations
dominate
society
and
write
the
each
advance
or
change
in
technology
is
an
opening
for
them
to
further
restrict
or
mistreat
its
cloud
cloud
virtualization
cloud
public
private
hybrid
csps
google
amazon
digitalocean
proxmox
cloud
formations
public
private
cloud
formations
public
private
hybrid
security
level
for
the
overall
formation
takes
on
the
level
of
the
highest
security
level
as
a
service
database
software
platform
infrastructure
as
a
service
model
daas
saas
paas
iaas
as
a
service
model
as
a
service
model
as
a
service
model
cloud
security
solutions
cisco
bitglass
arm
architecture
mobile
architecture
an
arm
processor
is
one
of
a
family
of
cpus
based
on
the
risc
instruction
set
architecture
developed
by
advanced
risc
machines
mobile
architecture
major
players
samsung
exynos
qualcomm
snapdragon
nvidia
texas
instruments
cortex
system
on
chip
soc
a
microprocessor
or
digital
signal
processor
core
multiprocessor
socs
having
more
than
one
processor
core
memory
blocks
including
a
selection
of
eeprom
and
flash
memory
timing
sources
including
oscillators
and
loops
peripherals
including
timers
and
reset
generators
external
including
industry
standards
such
as
spi
analog
interfaces
including
adcs
and
dacs
voltage
regulators
and
power
management
circuits
a
bus
either
proprietary
or
such
as
the
amba
bus
from
arm
holdings
connects
these
dma
controllers
route
data
directly
between
external
interfaces
and
bypassing
the
processor
core
and
thereby
increasing
the
data
throughput
of
the
cloud
in
a
box
virtualbox
process
a
process
instance
of
a
program
in
memory
generates
a
snapshot
of
current
scheduler
is
called
assigned
a
process
id
cpu
states
admitted
new
terminated
interrupt
exit
running
ready
scheduler
dispatch
or
wait
event
waiting
a
process
hardware
context
memory
hardware
software
software
context
context
context
logical
executable
physical
virtual
address
space
virtual
address
space
shells
interpreters
shells
sh
bash
cshell
ksh
nash
interpreters
perl
python
languages
java
assembler
code
language
assembler
java
shell
scripts
python
software
type
preprocessing
files
and
compilation
source
code
into
object
linking
loading
daemons
daemon
model
fork
exec
hardwaresoftware
hardwaresoftware
context
context
contextcontext
executable
executable
virtual
virtual
address
address
space
space
parent
child
daemon
model
if
fork
exec
listen
on
socket
elif
clean
up
file
descriptors
assign
run
executable
ssh
deep
dive
theory
provide
a
secure
protocol
that
can
be
used
to
provide
access
to
resources
on
a
ssh
deep
dive
setup
hardwaresoftware
hardwaresoftware
context
context
contextcontext
sshd
listening
on
ssh
port
virtual
virtual
address
address
space
space
server
client
control
service
and
client
behavior
ssh
deep
dive
operation
fork
exec
hardwaresoftware
hardwaresoftware
context
context
contextcontext
sshd
listening
on
bash
port
virtual
virtual
address
address
space
space
passwd
parent
child
shadow
well
known
ports
from
ssh
deep
dive
installation
search
ssh
less
install
ssh
deep
dive
configuration
server
ssh
somehost
someuser
ssh
user
ssh
somecommand
keys
ssh
deep
dive
administration
ssh
deep
dive
design
server
fire
fire
web
wall
wall
gatekeeperserver
server
server
manual
man
man
man
export
apropos
catman
locate
updatedb
zcat
nroff
less
shells
a
shell
is
a
program
that
takes
commands
from
a
or
other
user
device
and
passes
it
to
the
operating
system
for
a
shell
dispatches
commands
to
the
operating
bash
sh
ksh
nash
cshell
operating
system
touch
points
libc
file
descriptors
or
user
input
or
user
output
or
user
output
pipes
redirection
one
of
the
most
powerful
features
of
pipes
allows
interprocess
communication
ps
grep
ssh
awk
tee
redirection
redirects
file
descriptors
cat
sort
cat
hardware
software
hardware
software
context
context
context
context
stdout
stdin
executable
executable
virtual
virtual
address
address
space
space
regular
expressions
matches
the
previous
element
zero
or
more
matches
the
previous
element
one
or
more
matches
the
previous
element
zero
or
one
beginning
anchor
end
anchor
any
single
character
boot
process
application
config
application
network
config
network
os
services
os
init
kernel
boot
loader
grub
boot
loader
mbr
initialization
bios
firmware
hardware
system
startup
the
continuum
is
there
a
relationship
between
space
and
how
long
is
a
how
long
is
a
the
grace
hopper
nanosecond
rear
admiral
grace
murray
hopper
of
the
first
programmers
of
mark
computer
the
term
after
finding
a
moth
in
a
relay
switch
how
much
distance
can
electricity
travel
in
a
how
much
distance
can
electricity
travel
in
a
the
math
of
it
all
how
much
data
can
a
channel
one
start
bit
eight
data
bits
one
stop
bit
ten
bits
one
byte
x
x
x
x
simple
math
tech
notes
interfacename
rx
bytes
rx
packets
tx
bytes
tx
packets
link
hwaddr
inet
up
broadcast
running
multicast
rx
tx
rx
tx
core
technical
systems
prep
storage
drives
no
moving
mechanical
components
flash
memory
limited
life
hard
disk
drive
spinning
platters
longer
storage
life
slower
high
capacity
used
by
any
human
or
other
system
to
communicate
with
send
data
to
or
fro
keyboard
monitor
camera
printer
usb
drives
network
adapter
booting
a
system
two
distinct
stages
hardware
bootstrap
primarily
used
with
disk
drive
based
systems
all
disk
systems
use
basic
same
process
mac
is
a
little
different
booting
a
system
hardware
post
cold
or
warm
bootstrap
reads
from
cmos
settings
about
loads
operating
system
locally
or
remotely
from
a
designated
drive
memory
volatile
random
access
memory
quick
access
dram
read
only
memory
flash
memory
virtual
memory
cpu
components
control
unit
arithmetic
logic
unit
memory
management
unit
clock
rate
cpu
central
processing
unit
aka
microprocessor
of
the
vs
vs
vs
bit
architecture
cpus
multiple
cpus
learning
objectives
at
the
end
of
this
you
should
be
able
describe
the
hardware
components
of
a
computer
system
operating
systems
explain
the
ring
architecture
build
a
virtual
machine
modify
virtual
machine
settings
opening
why
this
content
matters
how
it
fits
into
cybersecurity
what
you
should
learn
why
i
love
this
industry
systems
prep
computer
organization
and
architecture
hardware
and
virtual
machines
first
last
operating
systems
windows
most
widely
used
for
personal
bill
gates
started
as
gui
for
current
windows
and
server
unix
in
for
internal
use
many
variants
written
in
c
programming
language
simple
yet
complex
epoch
time
operating
systems
oracle
virtualbox
freely
available
open
source
software
runs
on
windows
linux
macintosh
solaris
supports
a
large
number
of
guest
operating
systems
hypervisor
product
examples
type
vmware
vsphere
esxi
microsoft
windows
server
xen
citrix
xenserver
red
hat
enterprise
virtualization
kvm
type
oracle
virtualbox
vmware
workstation
linux
containers
vs
vms
closing
careers
in
this
area
of
security
the
work
the
rewards
how
to
pursue
hypervisors
type
type
hypervisor
guest
os
guest
os
hypervisor
guest
os
guest
os
host
os
hardware
hardware
virtualization
allows
multiple
virtual
machines
to
run
on
a
single
hardware
system
hypervisor
grants
access
to
or
emulates
resources
nic
etc
operating
systems
linux
variant
of
unix
released
sept
linus
torvalds
desktop
and
sever
macos
originally
developed
from
apple
computers
based
off
of
lisa
os
current
version
os
x
operating
systems
ring
kernel
ring
drivers
ring
drivers
ring
applications
operating
ring
architecture
most
to
least
macos
originally
developed
from
apple
computers
based
off
of
lisa
os
current
version
os
x
operating
systems
vbox
overview
module
objectives
understand
how
various
components
can
be
configured
to
build
a
gain
a
working
knowledge
of
the
virtual
box
command
line
syllabus
virtualbox
command
line
machine
components
cpu
memory
network
keyboard
mouse
monitor
storage
vboxmanage
vboxmanage
list
vms
hostinfo
groups
runningvms
hostcpuids
webcams
ostypes
hddbackends
screenshotsformats
hostdvds
hdds
hostfloppies
dvds
intnets
floppies
bridgedifs
usbhost
hostonlyifs
usbfilters
natnets
systemproperties
dhcpservers
extpacks
vm
build
general
mechanics
create
hard
drive
create
vm
create
sata
storage
controller
attach
hard
drive
create
ide
storage
controller
add
dvd
drive
and
insert
iso
set
ioapic
set
boot
order
set
main
and
video
memory
create
bridged
interface
vboxmanage
example
vboxmanage
showvminfo
vboxmanage
createhd
vboxmanage
createvm
louis
vboxmanage
storagectl
louis
sata
intelahci
vboxmanage
storageattach
louis
hdd
vboxmanage
storagectl
louis
ide
vboxmanage
storageattach
louis
dvddrive
vboxmanage
example
vboxmanage
modifyvm
louis
on
vboxmanage
modifyvm
louis
dvd
disk
none
none
vboxmanage
modifyvm
louis
vboxmanage
modifyvm
louis
bridged
lab
construct
a
script
of
your
to
create
three
vms
using
the
command
configure
the
vm
as
noted
mb
cpus
ide
controller
dvd
sata
controller
luns
start
vm
take
a
snapshot
status
vm
stop
vm
homework
create
a
script
of
your
that
will
take
vm
build
parameters
cpu
count
amount
of
memory
number
of
ide
controllers
number
of
attached
disks
and
size
number
of
sata
controllers
number
of
attached
disks
and
size
back
up
slides
user
space
kernel
space
user
space
user
applications
terminal
shells
gnu
c
lib
kernel
space
system
call
kernel
services
device
drivers
linux
kernel
security
dac
and
superuser
namespaces
linux
security
modules
selinux
audit
subsystem
seccomp
integrity
management
linux
kernel
monolithic
kernel
c
and
assembly
free
and
open
source
released
under
the
gnu
general
public
license
version
android
smart
tvs
webcams
what
is
virtualization
is
the
creation
of
a
virtual
rather
than
actual
version
of
such
as
an
operating
a
a
storage
device
or
network
linux
architecture
hardware
cpu
ram
devices
linux
os
kernel
modules
system
libraries
system
software
daemons
user
processes
user
shells
learning
objectives
at
the
end
of
this
you
should
be
able
describe
the
basic
components
of
a
linux
system
use
basic
command
line
describe
the
basic
structure
of
linux
opening
why
this
content
matters
how
it
fits
into
cybersecurity
what
you
should
learn
tonight
why
i
love
this
industry
closing
careers
in
this
area
of
security
the
work
the
rewards
how
to
pursue
core
technical
systems
prep
daemon
type
of
program
runs
in
background
looks
like
a
assigned
a
unique
process
identification
number
systems
prep
linux
basics
first
last
january
linux
desktop
environments
command
line
servers
gui
graphical
user
interface
command
line
shell
many
interchangeable
path
references
current
single
dot
represents
the
current
folder
double
dot
moves
up
one
level
folders
root
binaries
etc
configuration
user
folders
var
log
files
usr
user
etc
mnt
mounts
software
libraries
code
classes
procedures
scripts
configuration
data
add
a
software
library
to
a
program
achieve
more
functionality
automate
a
process
without
writing
code
for
ls
expanded
all
files
including
hidden
long
details
file
rwx
permissions
owner
group
basic
linux
commands
ls
directory
listing
pwd
p
rint
w
orking
d
shows
current
directory
cat
concatenate
two
can
also
be
used
to
view
contents
of
a
file
whoami
displays
the
owner
of
the
current
login
session
man
manual
pages
details
about
other
commands
commands
touch
file
creation
timestamp
cd
c
hange
d
irectory
mkdir
m
a
k
e
dir
ectory
rmdir
r
e
m
ove
dir
ectory
core
technical
systems
prep
python
and
interpreted
languages
python
was
developed
in
by
guido
van
rossum
who
at
the
looking
for
a
hobby
project
to
work
python
is
an
interpreted
which
is
in
contrast
to
compiled
languages
which
have
to
be
compiled
to
code
that
the
machine
directly
understands
before
being
run
history
of
computers
and
programming
higher
level
programming
languages
developed
until
the
which
use
natural
language
constructs
to
make
the
process
of
developing
a
program
more
the
c
at
the
heart
of
unix
operating
systems
was
developed
around
history
of
computers
and
programming
first
electromechanical
computers
created
until
the
late
operating
at
that
to
ghz
or
billion
these
computers
were
programmed
using
binary
or
decimal
machine
code
after
this
assembly
languages
were
which
have
a
close
mapping
to
machine
code
but
use
real
words
to
make
the
code
more
human
readable
history
of
computers
and
programming
first
ever
formulation
of
a
computer
can
be
considered
the
analytical
engine
created
by
charles
babbage
in
never
actually
was
to
be
programmed
in
punch
cards
learning
objectives
at
the
end
of
this
you
should
be
able
describe
the
difference
between
compiled
and
interpreted
coding
languages
create
basic
python
scripts
import
modules
into
a
python
script
opening
why
this
content
matters
how
it
fits
into
cybersecurity
what
you
should
learn
tonight
why
i
love
this
industry
systems
prep
intro
to
python
first
last
january
python
and
interpreted
languages
interpreted
like
javascript
and
do
not
have
to
be
compiled
before
being
and
instead
are
read
by
an
interpreter
the
python
which
performs
actions
based
on
the
python
since
the
interpreted
languages
have
become
very
popular
due
to
their
ease
of
use
in
creating
web
applications
hello
world
usr
file
permissions
py
algorithms
the
algorithm
is
the
steps
needed
to
execute
the
often
good
to
outline
ideas
before
coding
get
two
values
from
the
user
multiply
the
two
values
print
the
resulting
value
modules
libraries
of
existing
functions
and
values
that
can
be
imported
into
code
use
the
command
import
import
math
print
import
sys
print
evolution
of
the
software
practitioner
coder
constant
direct
this
can
convert
pseudocode
to
specific
language
programmer
frequent
direct
supervision
write
code
for
this
abstraction
openfile
developer
some
direct
supervision
can
create
design
patterns
engineer
minimal
supervision
knowledge
deep
may
not
be
wide
architect
no
direct
works
directly
closing
careers
in
this
area
of
security
the
work
the
rewards
how
to
pursue
variable
math
numeric
variables
can
be
used
to
calculate
new
values
example
print
variables
used
to
hold
values
can
be
modified
while
running
code
number
greeting
print
items
in
parenthesis
separated
by
commas
are
printed
with
a
space
answer
a
plus
in
the
parenthesis
is
either
addition
or
answer
is
str
system
startup
overview
boot
process
application
config
application
network
config
network
os
services
os
init
kernel
boot
loader
grub
boot
loader
mbr
initialization
bios
firmware
hardware
linux
halt
single
user
mode
local
multiuser
networking
no
network
service
full
multiuser
no
x
not
used
full
multiuser
networking
x
windows
reboot
linux
systemctl
systemd
linux
milestones
systemctl
enable
ln
service
disable
rm
status
systemctl
cat
journalctl
windows
four
phases
preboot
post
on
self
mbr
boot
sector
code
boot
loader
boot
configuration
data
kernel
and
executive
subsystems
pending
file
rename
operations
winlogon
process
lsass
windows
phase
preboot
post
on
self
power
supply
validates
voltages
provides
power
to
mobo
pass
control
to
bios
select
boot
device
read
device
mbr
into
memory
verify
valid
mbr
transfer
control
to
code
in
mbr
check
bootable
flag
in
primary
partition
read
first
sector
sector
into
memory
transfer
control
to
boot
sector
code
finds
bootmgr
load
bootmgr
into
memory
windows
phase
boot
loader
bootmgr
reads
boot
configuration
data
finds
os
transfers
control
to
or
initialize
memory
and
load
boot
drivers
transfer
control
to
kernel
windows
phase
kernel
and
executive
subsystems
and
abstraction
display
startup
screen
create
key
from
winload
data
host
key
local
machine
create
initialize
drivers
loaded
from
boot
loader
phase
initialize
devices
detects
basic
hardware
map
to
system
address
space
windows
native
api
kernel
executes
manager
create
environment
runs
programs
in
executes
windows
subsystem
call
config
manager
to
complete
registry
perform
pending
file
deletions
or
file
rename
operations
create
system
environment
variables
start
level
drivers
start
winlogon
winlogin
process
lsass
windows
phase
winlogon
process
controls
and
mouse
reads
execute
lsass
and
establishes
communications
back
to
winlogon
for
authorization
and
authentication
authenticate
user
clone
control
set
to
lkgc
read
key
to
find
load
current
shell
function
legacy
current
system
configuration
msconfig
windows
entities
erd
process
session
user
inherits
user
security
token
associated
with
windows
station
thread
associated
with
desktop
relationships
to
other
objects
session
session
zero
runs
session
runs
process
a
process
can
change
the
window
station
it
is
attached
a
process
cannot
change
session
once
it
has
that
is
why
services
remain
in
session
which
are
the
running
components
of
a
are
associated
with
desktops
window
station
a
window
station
contains
the
a
window
station
has
an
association
with
the
process
that
created
a
windows
station
belongs
to
a
relationships
to
other
objects
desktop
desktops
are
contained
within
the
window
desktops
are
associated
with
processes
through
window
desktops
are
associate
with
a
desktop
belongs
to
a
single
window
station
and
through
that
window
station
to
a
single
a
window
is
a
child
object
of
the
desktop
contained
in
the
windows
registry
the
windows
registry
is
used
to
store
configuration
and
administrative
information
for
software
hardware
user
the
operating
regedit
before
we
take
attendance
any
questions
on
the
last
any
question
on
the
changes
to
the
syllabus
review
tests
and
or
quizzes
llc
sysprep
secureset
core
windows
introduction
llc
agenda
ms
history
cmd
intro
to
ad
federation
forests
least
access
power
shell
llc
llc
what
is
llc
windows
released
in
first
true
attempt
at
a
graphical
user
interface
in
it
was
notable
because
it
relied
heavily
on
use
of
a
mouse
before
the
mouse
was
a
common
computer
input
llc
windows
released
in
the
big
innovation
for
windows
was
that
windows
could
overlap
each
and
it
also
introduced
the
ability
to
minimise
or
maximise
windows
instead
of
or
llc
windows
released
in
version
of
windows
that
required
a
considered
to
be
a
challenger
to
apple
and
introduced
the
ability
to
run
programs
in
which
brought
multitasking
to
legacy
and
supported
colors
bringing
a
more
colorful
look
to
the
llc
windows
released
in
introduced
truetype
allowed
supported
programs
to
be
controlled
with
a
first
windows
to
be
distributed
on
a
llc
windows
released
in
ever
start
button
and
start
plug
and
internet
explorer
was
released
in
windows
but
was
not
installed
by
default
requiring
the
windows
later
revisions
of
windows
included
ie
by
llc
windows
released
in
built
on
windows
and
brought
with
it
ie
outlook
windows
address
microsoft
chat
and
netshow
second
edition
in
llc
windows
released
in
windows
millennium
edition
was
the
last
windows
to
be
based
on
and
the
last
in
the
windows
ie
windows
media
player
and
windows
movie
maker
was
considered
a
low
point
in
the
windows
series
by
llc
windows
released
in
to
be
the
enterprise
automatic
updating
played
an
important
role
in
windows
and
became
the
first
windows
to
support
llc
windows
released
in
windows
xp
was
the
longest
running
microsoft
operating
seeing
three
major
updates
and
support
up
until
april
years
from
its
original
release
windows
xp
was
still
used
on
an
estimated
pcs
when
it
was
llc
windows
released
in
burdened
the
user
with
hundreds
of
requests
for
app
permissions
under
account
the
outcome
of
the
trustworthy
computing
initiative
which
now
meant
that
users
had
to
approve
or
disapprove
attempts
by
programs
to
make
various
llc
windows
released
in
it
was
intended
to
fix
all
the
problems
and
criticism
faced
by
it
was
more
stable
and
easier
to
becoming
the
operating
system
most
users
and
business
would
upgrade
to
from
windows
forgoing
vista
llc
windows
released
in
most
radical
overhaul
of
the
windows
ditching
the
start
button
and
start
menu
in
favor
of
a
more
start
the
new
tiled
interface
saw
program
icons
and
live
a
desktop
was
still
which
resembled
windows
supported
usb
llc
windows
released
in
a
free
point
release
to
windows
windows
the
start
which
brought
up
the
start
screen
from
the
desktop
view
of
windows
users
could
also
choose
to
boot
directly
into
the
desktop
of
windows
which
was
more
suitable
for
those
using
a
desktop
computer
with
a
mouse
and
keyboard
than
the
start
llc
windows
released
in
some
interesting
features
include
the
ability
to
switch
between
a
keyboard
and
mouse
mode
and
a
tablet
for
those
computers
like
the
surface
pro
with
a
detachable
despite
being
the
ninth
version
of
windows
is
designed
to
unify
all
windows
platforms
across
multiple
including
windows
phone
and
with
universal
apps
that
can
be
downloaded
from
the
windows
store
and
run
on
all
windows
llc
cmd
command
this
will
show
llc
forget
cmd
and
open
powershell
some
useful
commands
to
get
us
help
help
or
clear
type
this
command
and
the
screen
will
clear
exit
will
close
out
the
prompt
window
llc
power
built
on
it
is
a
shell
and
scripting
designed
for
system
administrators
and
to
automate
the
administration
of
multiple
operating
systems
and
and
the
processes
related
to
the
applications
that
run
on
those
operating
llc
llc
in
type
cd
and
then
hit
what
now
type
now
what
use
the
tab
feature
to
help
complete
file
paths
and
llc
windows
command
what
is
ping
used
llc
what
is
tracert
used
llc
what
is
whoami
used
llc
what
is
gpresult
used
llc
example
flowchart
start
no
no
yes
yes
take
umbrella
wear
coat
dress
casually
flowcharting
graphically
diagraming
algorithms
or
processes
useful
for
verifying
structures
needed
can
help
to
expose
underlying
logic
issues
learning
objectives
at
the
end
of
this
the
participant
should
be
able
create
basic
flowcharts
create
and
use
python
including
the
function
opening
why
this
content
matters
how
it
fits
into
cybersecurity
what
you
should
learn
tonight
why
i
love
this
industry
applied
cryptography
ssl
attacks
vulnerabilities
first
last
january
core
technical
bootcamp
closing
careers
in
this
area
of
security
the
work
the
rewards
how
to
pursue
nassi
function
example
perimeter
of
given
the
two
sides
def
return
calling
the
print
zen
of
python
python
was
designed
to
be
a
dynamic
language
the
flexibility
of
python
comes
at
a
price
the
zen
of
python
should
be
considered
when
developing
code
type
at
the
python
command
line
importing
functions
import
this
allows
all
functions
to
be
available
without
copying
and
pasting
called
using
example
perimeter
function
is
saved
in
import
functions
secureset
provides
a
powerful
direct
path
into
cybersecurity
next
core
july
did
you
more
than
cybersecurity
jobs
in
the
us
are
example
script
usr
def
return
def
return
if
code
reuse
often
we
find
blocks
of
code
that
need
to
be
reused
copy
and
paste
for
while
loops
work
in
all
situations
not
portable
from
solution
to
solution
functions
easy
reuse
portable
