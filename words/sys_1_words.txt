secureset
bash
module
llc
module
objectives
bash
theory
rationale
for
interface
ȋcliȍ
bash
capabilities
bash
installation
bash
configuration
configuration
mechanisms
bash
operation
performing
activities
within
the
bash
environment
bash
lab
learning
to
use
bash
commands
utilities
llc
bash
shell
theory
shells
user
interface
to
the
os
command
interpreter
presents
system
processes
resources
to
users
executes
executable
files
translates
commands
into
os
instructions
provides
programming
environment
to
users
create
tools
ȋshell
scriptsȍ
from
shell
flow
control
llc
bash
shell
theory
why
interface
ȋcliȍ
vs
gui
guis
are
guided
workflows
necessary
to
understand
how
shell
is
configured
operates
in
order
to
understand
security
mechanisms
potential
vulnerabilities
extremely
powerful
tools
can
be
developed
by
combining
existing
shell
critical
to
understand
how
the
shell
functions
guis
can
mask
critical
underlying
details
llc
bash
shell
theory
history
bourne
shell
ȋshȍ
sys
ȋsteven
bourne
c
shell
ȋcshȍ
release
ȋbill
joy
late
korn
shell
ȋkshȍ
bell
labs
ȋdavid
korn
early
backward
compatible
with
bourne
shell
incorporates
c
shell
features
bourne
again
shell
ȋbashȍ
gnu
project
ȋbrian
fox
backward
compatible
with
bourne
shell
incorporates
c
korn
shell
features
typically
the
default
linux
shell
llc
bash
shell
linux
architecture
bash
is
packaged
with
all
linux
interface
between
utilities
to
the
kernel
provides
a
configurable
interactive
processing
background
processing
programming
environment
for
users
kernel
os
core
component
directly
with
provides
low
level
services
to
upper
layer
file
network
management
llc
bash
shell
theory
bash
environment
can
customize
shell
characteristics
look
consists
environment
ȋsystemȍ
variables
exported
to
all
by
convention
shell
variables
must
export
variables
to
add
to
the
environment
extend
scope
to
can
be
typed
with
attributes
roȍ
functions
mechanism
to
group
commands
for
execution
by
invoking
the
function
name
can
add
to
existing
bash
functions
llc
bash
shell
theory
bash
environment
consists
shell
commands
commands
contained
within
the
bash
program
execute
within
the
shell
process
options
control
how
shell
operates
via
commands
set
display
current
options
bash
shells
can
be
nested
env
command
displays
environment
ȋincluding
exported
shell
variablesȍ
llc
bash
shell
theory
process
autonomous
instance
of
an
executing
including
the
environment
established
for
that
process
processes
are
created
and
executed
in
a
hierarchical
structure
systemd
ȋǳinitǳ
pid
is
the
of
all
processes
child
processes
inherit
resources
from
their
parent
processes
each
process
is
assigned
a
unique
process
id
ȋpidȍ
and
its
parent
process
id
ȋppidȍ
pid
can
be
accessed
via
the
variable
each
process
is
assigned
an
execution
priority
llc
bash
shell
theory
process
each
bash
shell
is
a
process
instance
bash
inherit
from
their
parent
shells
open
file
descriptors
ȋincluding
stderrȍ
environment
variables
explicitly
exported
shell
variables
current
working
directory
umask
ȋcontrol
designating
permissions
on
filesȍ
traps
llc
bash
shell
theory
process
relationships
ǳsourcedǳ
process
parent
does
not
fork
a
child
but
executes
command
within
the
current
shell
started
by
or
source
interactive
process
parent
child
process
waits
for
child
to
complete
background
process
parent
child
process
does
not
wait
for
child
to
complete
llc
bash
shell
theory
job
control
alternative
method
of
managing
executing
processes
jobs
run
in
the
foreground
ȋinteractiveȍ
or
background
only
jobs
running
in
a
can
be
viewed
from
the
parent
shell
os
assigns
pids
parent
shell
assigns
job
other
jobs
must
be
access
via
their
pid
jobs
can
be
transitioned
to
or
retrieved
to
foreground
llc
bash
shell
theory
signals
communication
mechanism
for
one
process
to
send
message
to
another
process
commonly
used
to
suspend
or
terminate
a
or
provide
can
be
sent
via
sequences
or
command
killȍ
man
kill
kill
llc
bash
shell
theory
directory
structure
root
directory
working
directory
ȋpwd
commandȍ
current
parent
directories
home
directory
directory
path
names
can
absolute
relative
llc
bash
shell
theory
files
internally
to
each
open
file
is
represented
by
a
file
descriptor
by
every
shell
has
open
file
descriptors
ȋwhich
can
be
redirectedȍ
llc
bash
shell
installation
bash
is
included
by
default
within
linux
distros
if
can
be
downloaded
from
gnu
bash
page
follow
the
install
document
to
bash
llc
bash
shell
configuration
bash
configuration
upon
bash
can
be
customized
via
options
example
read
standard
configuration
files
read
force
bash
to
be
enforce
operational
restrictions
on
the
shell
users
force
interactive
shell
llc
bash
shell
configuration
shell
configuration
login
shell
configuration
bash
reads
may
execute
if
exists
bash
then
reads
the
first
of
the
following
ǳpersonalizedǳ
files
which
llc
bash
shell
configuration
shell
configuration
interactive
shell
configuration
bash
reads
command
prompts
common
values
username
hostname
working
directory
date
is
typically
llc
bash
shell
operation
command
order
of
precedence
aliases
keywords
functions
commands
hash
table
executables
scripts
type
displays
typeȋsȍ
order
of
precedence
llc
bash
shell
operation
alias
shortcuts
for
common
commands
be
careful
to
not
alias
an
existing
command
name
alias
alias
alias
keywords
function
definition
flow
control
programming
llc
bash
shell
operation
functions
can
add
to
existing
bash
functions
declare
to
view
current
functions
function
keyword
to
unset
to
delete
commands
bash
contains
internal
commands
ȋcommands
do
not
execute
in
separate
processesȍ
enable
to
view
commands
pwd
cd
echo
help
ulimit
kill
umask
llc
bash
shell
operations
hash
table
linux
maintains
a
hash
table
of
commands
for
quick
access
upon
commands
found
within
the
path
variable
path
are
into
a
hash
table
hash
displays
hash
table
hash
adds
command
to
hash
table
llc
bash
shell
operation
executables
compiled
binary
ȋmachine
languageȍ
programs
elf
ȋexecutable
linkable
formatȍ
standard
format
for
object
shared
and
core
dumpsǳ
scripts
ascii
files
which
must
be
executed
by
an
interpreter
interpreter
converts
text
commands
scripting
statements
into
machine
code
in
order
to
execute
on
a
particular
os
first
line
of
script
designates
interpreter
aka
ǳshebangǳȍ
path
environment
variable
establishes
search
order
for
do
not
include
ȋcurrent
directoryȍ
into
path
variable
potential
exposure
to
malware
llc
bash
shell
operation
locating
commands
files
which
command
displays
command
location
updatedb
locate
commands
updatedb
database
of
commands
files
locate
displays
command
location
llc
bash
shell
operation
history
command
displays
list
of
executed
commands
manage
file
histsize
histfilesize
histignore
can
commands
most
recent
command
command
command
at
designated
fc
command
enables
editing
history
commands
prior
to
execution
fcedit
environment
variable
designating
editor
for
fc
command
fc
line
line
llc
bash
shell
operation
dereferencing
variables
to
variable
or
braces
are
not
required
in
most
cases
braces
are
required
in
some
cases
llc
bash
shell
operation
argument
processing
expansion
positional
parameters
command
name
arguments
expansion
shell
splits
command
into
tokens
expands
wildcard
characters
prior
to
passing
arguments
to
the
commandȋsȍ
filename
expansion
ǳglobbingǳ
llc
bash
shell
operation
special
characters
quoting
certain
characters
have
special
meaning
to
the
shell
are
expanded
quoting
prevents
expansion
prior
to
passing
to
the
command
different
quoting
methods
provide
varying
degrees
of
expansion
prevention
once
literal
special
characters
are
passed
to
the
command
llc
bash
shell
operation
signals
foreground
process
can
be
suspended
via
tstp
ȋterminal
stopȍ
signal
can
then
be
resumed
in
fg
or
bg
foreground
process
can
be
terminated
via
multiple
signals
send
int
ȋinterruptȍ
signal
send
quit
signal
ȋif
workȍ
background
foreground
processes
can
be
terminated
from
the
shell
command
line
via
the
kill
command
kill
or
kill
sends
term
signal
to
process
ȋcan
be
trappedȍ
kill
or
kill
sends
quit
signal
to
process
ȋcan
be
trappedȍ
kill
or
kill
sends
kill
signal
to
process
ȋcannot
be
trappedȍ
llc
bash
shell
operation
echo
quit
echo
int
terminating
exit
trap
quit
trap
int
trap
hup
ignore
the
specified
signals
llc
bash
shell
operation
shell
options
each
bash
instance
can
be
customized
via
options
shellopts
environment
variable
containing
current
options
set
to
view
all
options
current
settings
allexport
vi
emacs
editor
noclobber
privileged
mode
noglob
restricted
mode
noexec
nounset
posix
default
to
posix
verbose
llc
bash
shell
operation
bash
help
man
pages
ȋǳmanualǳ
pagesȍ
man
displays
information
about
description
synopsis
switches
ȋoptionsȍ
examples
other
pertinent
usage
information
apropos
apropos
or
searches
man
pages
to
match
or
displays
pertinent
entries
google
extensive
help
information
is
available
via
google
search
ȋensure
accessed
information
is
currentȍ
llc
bash
shell
operation
shell
scripts
files
containing
commands
to
be
interpreted
by
the
shell
upon
execution
commands
ǳgroupedǳ
to
form
useful
reusable
utilities
typically
simplistic
even
though
bash
scripts
can
be
complex
if
use
scripting
language
or
compiled
language
first
line
of
script
designates
interpreter
ȋǳshebangǳȍ
llc
bash
shell
operation
file
test
operators
typically
used
by
shell
if
statement
to
determine
file
status
prior
to
executing
an
action
example
ȋfile
existsȍ
ȋuser
has
read
permissionȍ
ȋregular
fileȍ
ȋuser
has
write
permissionȍ
ȋdirectoryȍ
ȋuser
has
execute
permissionȍ
ȋblock
deviceȍ
ȋuser
is
file
ownerȍ
ȋsymbolic
linkȍ
ȋsuid
bit
setȍ
llc
bash
shell
lab
the
lab
will
exercise
multiple
commands
ȋsee
backup
slides
for
common
commands
utilitiesȍ
bash
ǳtourǳ
cd
echo
ls
file
owner
file
perms
chmod
cat
mkdir
touch
history
repeating
commands
bash
shell
commands
from
vi
bash
configuration
files
locate
env
vars
view
vi
restricted
bash
shell
llc
bash
shell
homework
deliver
a
fully
functional
script
that
mimics
the
behaviour
of
the
command
ps
using
the
file
this
would
include
the
main
library
as
well
as
good
llc
back
up
slides
iscsi
overview
llc
module
objectives
gain
a
working
knowledge
of
iscsi
understand
the
initiator
target
model
and
configure
packages
understand
general
setup
mechanics
llc
syllabus
nfs
summary
iscsi
llc
iscsi
internet
small
computer
system
interface
presents
block
storage
runs
over
tcp
allows
scsi
commands
to
be
sent
over
a
initiator
server
target
storage
llc
scsi
model
initiator
target
fc
scsi
block
device
llc
iscsi
architecture
initiator
target
ip
iscsi
block
device
llc
iscsi
model
initiator
ethernet
iscsi
target
ethernet
iscsi
block
device
initiator
llc
iscsi
setup
mechanics
target
setup
create
lun
download
iscsi
packages
define
lun
to
iscsi
target
subsystem
start
iscsi
target
daemon
initiator
setup
download
iscsi
packages
discover
iscsi
targets
login
to
iscsi
target
llc
iscsi
target
setup
download
apt
install
apt
install
istgt
apt
install
iscsitarget
apt
install
tgt
systemctl
enable
tgt
systemctl
start
tgt
systemctl
status
tgt
llc
iscsi
target
setup
edit
add
logical
volume
service
tgt
reload
systemctl
reload
tgt
systemctl
status
tgt
llc
iscsi
initiator
setup
download
apt
install
apt
install
istgt
apt
install
iscsitarget
apt
install
tgt
discover
process
iscsiadm
discovery
sendtargets
llc
iscsi
initiator
setup
login
process
iscsiadm
node
logout
process
iscsiadm
node
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
iscsi
llc
san
model
initiator
fibre
channel
target
scsi
block
device
llc
san
create
zones
between
an
initiator
and
one
or
more
targets
zone
rules
initiator
one
initiator
to
one
or
more
targets
never
configure
two
initiators
in
the
same
path
diversity
llc
san
create
zones
between
an
initiator
and
one
or
more
targets
llc
lab
work
a
setup
an
iscsi
target
on
laptop
a
configure
an
iscsi
initiator
on
laptop
b
setup
an
iscsi
target
on
laptop
b
configure
an
iscsi
initiator
on
laptop
a
llc
homework
enable
chap
on
your
iscsi
configuration
llc
back
up
slides
llc
llc
llc
llc
llc
llc
general
purpose
real
time
time
share
llc
llc
kernel
initrd
pivot
memory
physical
disk
llc
ioctl
device
driver
implementations
device
apps
physical
os
abstractions
nfs
open
driver
network
open
close
fc
fabric
close
fc
truncate
network
disk
truncate
seek
seek
read
read
write
write
llc
mkdir
cd
cp
ls
file
gunzip
file
cpio
ls
bin
conf
etc
init
lib
run
sbin
scripts
var
llc
install
binwalk
binwalk
use
address
based
upon
the
string
compressed
from
dd
gunzip
cpio
head
or
cpio
llc
llc
llc
llc
controls
network
buffer
minimum
initial
maximum
llc
buffer
size
delay
bandwidth
rtt
bandwidth
llc
initiator
listener
syn
tcb
allocated
tcp
initialized
to
state
success
returned
by
ack
tcp
transitioned
to
established
state
llc
gnu
grand
unified
bootloader
first
software
program
that
runs
when
a
machine
starts
responsible
for
loading
and
transferring
control
to
the
operating
system
kernel
software
buffered
system
partition
table
loaded
into
a
bios
boot
partition
llc
linux
hiddenmenu
title
linux
server
unbreakable
enterprise
kernel
root
kernel
ro
quiet
rhgb
initrd
llc
linux
number
of
seconds
before
hiddenmenu
title
free
form
field
root
kernel
ro
or
quiet
rhgb
initrd
llc
linux
decompose
initrd
mkdir
cd
cp
gunzip
cpio
ls
bin
conf
etc
init
lib
run
sbin
scripts
var
llc
llc
apropos
grub
man
grub
awk
llc
llc
llc
llc
llc
llc
llc
llc
llc
if
the
kernel
has
been
numeric
which
can
be
ored
a
module
with
a
license
has
been
this
includes
modules
with
no
set
by
modutils
and
a
module
was
force
loaded
by
insmod
set
by
modutils
and
unsafe
smp
smp
with
cpus
not
designed
for
a
module
was
forcibly
unloaded
from
the
system
by
rmmod
a
hardware
machine
check
error
occurred
on
the
a
bad
page
was
discovered
on
the
the
user
has
asked
that
the
system
be
marked
this
could
be
because
they
are
running
software
that
directly
modifies
the
or
for
other
the
system
has
the
acpi
dsdt
has
been
overridden
with
one
supplied
by
the
user
instead
of
using
the
one
provided
by
the
a
kernel
warning
has
a
module
from
was
the
system
is
working
around
a
severe
firmware
an
module
has
been
an
unsigned
module
has
been
loaded
in
a
kernel
supporting
module
a
soft
lockup
has
previously
occurred
on
the
the
kernel
has
been
live
llc
back
up
slides
llc
llc
llc
llc
llc
llc
physical
disk
devices
pvscan
pvcreate
pvdisplay
volume
groups
vgscan
vgcreate
vgdisplay
logical
volumes
lvscan
lvcreate
lvdisplay
llc
lvm
header
pvcreate
lvm
header
lvm
header
fdisk
partition
llc
llc
llc
llc
llc
llc
llc
scan
for
volume
lvm
vgscan
activate
all
volume
lvm
vgchange
y
with
this
and
the
volumes
you
should
be
able
to
mount
the
mount
llc
llc
llc
llc
llc
back
up
slides
network
file
system
overview
llc
module
objectives
gain
a
working
knowledge
of
network
file
system
explain
the
nfs
model
specify
options
appropriate
to
the
various
scenarios
llc
syllabus
definition
nfs
model
llc
network
file
system
nfs
create
by
sun
microsystems
in
releases
over
the
llc
nfs
model
theory
nfs
server
nfs
client
nfsd
nfsd
nfs
client
llc
nfs
package
download
installation
search
nfs
install
llc
nfs
control
administration
status
systemctl
status
start
systemctl
start
stop
systemctl
stop
llc
nfs
options
configuration
rsize
acdirmax
wsize
actimeo
bg
sync
fg
intr
retry
sec
timeo
soft
acregmin
hard
acregmax
ro
acdirmin
rw
llc
exports
llc
maintain
table
of
exported
nfs
file
systems
exportfs
llc
show
mount
information
for
an
nfs
server
llc
fstab
nfs
defaults
llc
use
cases
home
directories
databases
tools
utilities
ethernet
ethernet
nfs
iscsi
client
initiator
target
client
block
device
llc
lab
work
a
setup
a
nfs
server
export
as
export
as
for
all
customer
support
employees
allow
an
external
client
to
mount
and
is
able
to
run
executables
out
off
that
mount
and
that
no
one
mounting
the
file
system
can
write
to
it
allow
all
customer
support
employees
to
mount
their
home
add
and
to
mount
point
in
add
hard
option
to
mount
and
ask
your
partner
to
disable
the
mount
llc
hints
on
nfs
server
create
directory
change
permissions
to
allow
group
and
world
to
write
edit
exports
file
to
add
nfs
mounts
that
this
server
will
expose
run
the
exportfs
command
on
nfs
client
create
local
mount
directory
mount
file
system
from
file
server
cd
to
local
mount
directory
create
file
create
directory
swap
roles
your
partner
rinse
llc
repeat
samba
overview
llc
module
objectives
gain
a
working
knowledge
of
samba
explain
the
samba
model
specify
options
appropriate
to
the
use
cases
llc
syllabus
definition
samba
model
llc
samba
samba
implementation
of
cifs
llc
samba
model
theory
samba
client
samba
server
nfsd
smbd
samba
client
llc
samba
package
download
installation
search
samba
install
samba
llc
samba
control
administration
status
systemctl
status
smbd
start
systemctl
start
smbd
stop
systemctl
stop
smbd
llc
samba
options
configuration
sudo
adduser
sudo
smbpasswd
sudo
mkdir
path
valid
users
read
only
no
llc
testing
samba
smbclient
ls
smb
defaults
cifs
you
may
not
have
cifs
format
support
by
but
give
it
a
try
llc
use
cases
home
directories
databases
tools
utilities
ip
ip
samba
iscsi
client
initiator
target
client
block
device
llc
lab
work
a
setup
an
smb
server
export
as
allow
an
external
client
to
mount
and
is
able
to
run
executables
out
off
that
llc
lab
using
virtualbox
two
luns
on
fdisk
fdisk
mumble
is
one
of
the
two
drives
captured
from
the
volume
group
using
both
luns
a
logical
volume
as
a
mirrored
pair
configure
logical
volume
for
iscsi
on
login
into
iscsi
lun
put
a
partition
on
the
iscsi
lun
put
file
system
on
iscsi
lun
mount
iscsi
lun
configure
nfs
for
that
file
system
configure
smb
for
that
file
system
on
mount
nfs
mount
from
mount
smb
share
llc
homework
with
your
identify
exposure
points
of
your
design
llc
back
up
slides
llc
llc
llc
time
business
need
business
need
analysis
pdr
preliminary
design
review
cdr
critical
design
review
business
requirements
fdr
final
design
review
vv
validation
and
verification
system
requirements
pdr
system
architecture
cdr
system
design
system
development
unit
test
system
test
fdr
system
integration
soak
test
vv
production
llc
llc
llc
llc
llc
abstract
what
is
the
functional
description
what
does
it
general
mechanics
how
does
it
do
calling
sequence
how
is
it
explicit
inputs
what
are
the
required
explicit
outputs
what
are
the
explicit
implicit
inputs
what
are
the
assumed
implicit
outputs
what
are
the
assumed
caveats
any
warnings
llc
llc
add
an
element
to
the
end
of
the
list
add
all
elements
of
a
list
to
the
another
list
insert
an
item
at
the
defined
index
removes
an
item
from
the
list
removes
and
returns
an
element
at
the
given
index
removes
all
items
from
the
list
returns
the
index
of
the
first
matched
item
returns
the
count
of
number
of
items
passed
as
an
argument
sort
items
in
a
list
in
ascending
order
reverse
the
order
of
items
in
the
list
returns
a
shallow
copy
of
the
list
llc
remove
all
items
form
the
return
a
shallow
copy
of
the
return
a
new
dictionary
with
keys
from
seq
and
value
equal
to
v
to
return
the
value
of
if
key
does
not
return
to
return
a
new
view
of
the
items
return
a
new
view
of
the
remove
the
item
with
key
and
return
its
value
or
d
if
key
is
not
if
d
is
not
provided
and
key
is
not
raises
remove
and
return
an
arbitrary
item
raises
keyerror
if
the
dictionary
is
if
key
is
in
the
return
its
if
insert
key
with
a
value
of
d
and
return
d
to
update
the
dictionary
with
the
pairs
from
overwriting
existing
return
a
new
view
of
the
values
llc
colors
for
color
in
print
color
print
for
color
in
print
color
print
for
color
in
print
color
print
for
color
in
print
color
print
for
color
in
print
color
print
for
color
in
print
color
print
llc
llc
def
listdir
listdir
call
frame
listdir
call
frame
listdir
call
frame
llc
llc
llc
llc
llc
llc
llc
llc
back
up
slides
software
development
ii
overview
llc
module
objectives
show
the
function
and
benefits
of
various
security
organizations
understand
the
different
types
of
shared
how
to
examine
the
entry
points
of
a
how
to
add
a
library
into
the
become
familiar
python
list
and
dictionary
data
structures
understand
the
syntax
and
semantics
of
the
library
code
provided
for
the
llc
syllabus
importance
of
staying
current
security
organizations
and
associations
executable
and
linkable
format
shared
library
overview
data
structures
library
code
programming
llc
importance
of
staying
current
technology
is
an
exponential
phenomena
current
skill
sets
valid
for
months
meetups
mailing
lists
blogs
conferences
training
seminars
webinars
llc
organizations
and
associations
community
participation
and
involvement
securitynow
infragard
issa
mitre
secure
set
cloud
security
alliance
others
llc
executable
and
linkable
format
a
common
standard
file
format
for
object
shared
and
core
first
published
in
the
system
v
application
binary
binary
interface
and
later
in
the
tool
interface
it
was
quickly
adopted
among
different
vendors
of
it
became
the
standard
binary
file
format
for
unix
and
systems
on
by
the
project
in
llc
executable
and
linkable
format
equivalent
to
specifying
and
displays
the
information
contained
in
the
elf
llc
executable
and
linkable
format
displays
the
information
contained
in
the
segment
if
it
has
displays
the
information
contained
in
the
section
if
it
has
llc
executable
and
linkable
format
displays
the
information
contained
in
the
section
if
it
has
displays
the
detailed
section
implies
llc
executable
and
linkable
format
displays
the
entries
in
symbol
table
section
of
the
if
it
has
displays
the
entries
in
dynamic
symbol
table
section
of
the
if
it
has
display
all
the
headers
in
the
equivalent
to
llc
executable
and
linkable
format
displays
the
contents
of
the
note
segments
if
displays
the
contents
of
the
relocation
llc
executable
and
linkable
format
displays
the
contents
of
the
unwind
if
it
has
only
the
unwind
sections
for
elf
as
well
as
arm
unwind
tables
are
currently
displays
the
contents
of
the
dynamic
if
it
has
llc
executable
and
linkable
format
displays
the
contents
of
the
version
sections
in
the
it
they
displays
information
in
the
if
there
is
llc
executable
and
linkable
format
when
displaying
this
option
makes
readelf
use
the
symbol
hash
tables
in
the
dynamic
rather
than
the
symbol
table
llc
executable
and
linkable
format
or
or
displays
the
contents
of
the
indicated
section
as
a
hexadecimal
a
number
identifies
a
particular
section
by
index
in
the
section
any
other
string
identifies
all
sections
with
that
name
in
the
object
or
or
displays
the
contents
of
the
indicated
section
as
a
hexadecimal
a
number
identifies
a
particular
section
by
index
in
the
section
any
other
string
identifies
all
sections
with
that
name
in
the
object
llc
the
contents
of
the
section
will
be
relocated
before
they
are
executable
and
linkable
format
or
or
displays
the
contents
of
the
indicated
section
as
printable
a
number
identifies
a
particular
section
by
index
in
the
section
any
other
string
identifies
all
sections
with
that
name
in
the
object
llc
executable
and
linkable
format
requests
that
the
being
dumped
by
r
or
p
options
are
decompressed
before
being
if
the
are
not
compressed
then
they
are
displayed
as
displays
the
file
symbol
index
information
contained
in
the
header
part
of
binary
performs
the
same
function
as
the
command
to
but
without
using
the
bfd
llc
executable
and
linkable
format
displays
the
contents
of
the
debug
sections
in
the
if
any
are
if
one
of
the
optional
letters
or
words
follows
the
switch
then
only
data
found
in
those
specific
sections
will
be
llc
shared
libraries
description
this
also
known
as
or
groups
together
multiple
compiled
object
code
files
into
a
single
file
known
as
a
types
static
loaded
into
executable
link
dynamic
loaded
into
process
run
time
list
dynamic
library
dependencies
of
an
ldd
explicitly
specify
a
shared
library
location
in
a
makefile
or
on
the
command
llc
shared
libraries
configure
dynamic
linker
bindings
ldconfig
configure
static
linker
llc
identifying
shared
libraries
entry
points
the
value
is
and
will
not
be
changed
by
further
the
symbol
is
in
the
uninitialized
data
section
as
the
symbol
is
common
symbols
are
uninitialized
when
multiple
common
symbols
may
appear
with
the
same
if
the
symbol
is
defined
the
common
symbols
are
treated
as
undefined
the
symbol
is
in
the
initialized
data
the
symbol
is
in
an
initialized
data
section
for
small
some
object
file
formats
permit
more
efficient
access
to
small
data
such
as
a
global
int
variable
as
opposed
to
a
large
global
llc
shared
libraries
for
pe
format
files
this
indicates
that
the
symbol
is
in
a
section
specific
to
the
implementation
of
for
elf
format
files
this
indicates
that
the
symbol
is
an
indirect
this
is
a
gnu
extension
to
the
standard
set
of
elf
symbol
it
indicates
a
symbol
which
if
referenced
by
a
relocation
does
not
evaluate
to
its
but
instead
must
be
invoked
at
the
runtime
execution
will
then
return
the
value
to
be
used
in
the
the
symbol
is
an
indirect
reference
to
another
the
symbol
is
a
debugging
the
symbols
is
in
a
stack
unwind
the
symbol
is
in
a
read
only
data
llc
shared
libraries
the
symbol
is
in
an
uninitialized
data
section
for
small
the
symbol
is
in
the
text
the
symbol
is
the
symbol
is
a
unique
global
this
is
a
gnu
extension
to
the
standard
set
of
elf
symbol
for
such
a
symbol
the
dynamic
linker
will
make
sure
that
in
the
entire
process
there
is
just
one
symbol
with
this
name
and
type
in
the
symbol
is
a
weak
when
a
weak
defined
symbol
is
linked
with
a
normal
defined
the
normal
defined
symbol
is
used
with
no
when
a
weak
undefined
symbol
is
linked
and
the
symbol
is
not
the
value
of
the
weak
symbol
becomes
zero
with
no
on
some
uppercase
indicates
that
a
default
value
has
been
llc
shared
libraries
the
symbol
is
a
weak
symbol
that
has
not
been
specifically
tagged
as
a
weak
object
when
a
weak
defined
symbol
is
linked
with
a
normal
defined
the
normal
defined
symbol
is
used
with
no
when
a
weak
undefined
symbol
is
linked
and
the
symbol
is
not
the
value
of
the
symbol
is
determined
in
a
manner
without
on
some
uppercase
indicates
that
a
default
value
has
been
the
symbol
is
a
stabs
symbol
in
an
object
in
this
the
next
values
printed
are
the
stabs
other
the
stabs
desc
and
the
stab
stabs
symbols
are
used
to
hold
debugging
the
symbol
type
is
or
object
file
format
the
symbol
llc
back
up
slides
system
startup
overview
llc
boot
process
application
config
application
network
config
network
os
services
os
init
kernel
boot
loader
grub
boot
loader
mbr
initialization
bios
firmware
hardware
linux
halt
single
user
mode
local
multiuser
networking
no
network
service
full
multiuser
no
x
not
used
full
multiuser
networking
x
windows
reboot
linux
systemctl
systemd
linux
milestones
systemctl
enable
ln
service
disable
rm
status
systemctl
cat
journalctl
windows
four
phases
preboot
post
on
self
mbr
boot
sector
code
boot
loader
boot
configuration
data
kernel
and
executive
subsystems
pending
file
rename
operations
winlogon
process
lsass
windows
phase
preboot
post
on
self
power
supply
validates
voltages
provides
power
to
mobo
pass
control
to
bios
select
boot
device
read
device
mbr
into
memory
verify
valid
mbr
transfer
control
to
code
in
mbr
check
bootable
flag
in
primary
partition
read
first
sector
sector
into
memory
transfer
control
to
boot
sector
code
finds
bootmgr
load
bootmgr
into
memory
windows
phase
boot
loader
bootmgr
reads
boot
configuration
data
finds
os
transfers
control
to
or
initialize
memory
and
load
boot
drivers
transfer
control
to
kernel
windows
phase
kernel
and
executive
subsystems
and
abstraction
display
startup
screen
create
key
from
winload
data
host
key
local
machine
create
initialize
drivers
loaded
from
boot
loader
phase
initialize
devices
detects
basic
hardware
map
to
system
address
space
windows
native
api
kernel
executes
manager
create
environment
runs
programs
in
executes
windows
subsystem
call
config
manager
to
complete
registry
perform
pending
file
deletions
or
file
rename
operations
create
system
environment
variables
start
level
drivers
start
winlogon
winlogin
process
lsass
windows
phase
winlogon
process
controls
and
mouse
reads
execute
lsass
and
establishes
communications
back
to
winlogon
for
authorization
and
authentication
authenticate
user
clone
control
set
to
lkgc
read
key
to
find
load
current
shell
function
legacy
current
system
configuration
msconfig
windows
entities
erd
process
session
user
inherits
user
security
token
associated
with
windows
station
thread
associated
with
desktop
relationships
to
other
objects
session
session
zero
runs
session
runs
process
a
process
can
change
the
window
station
it
is
attached
a
process
cannot
change
session
once
it
has
that
is
why
services
remain
in
session
which
are
the
running
components
of
a
are
associated
with
desktops
window
station
a
window
station
contains
the
a
window
station
has
an
association
with
the
process
that
created
a
windows
station
belongs
to
a
relationships
to
other
objects
desktop
desktops
are
contained
within
the
window
desktops
are
associated
with
processes
through
window
desktops
are
associate
with
a
desktop
belongs
to
a
single
window
station
and
through
that
window
station
to
a
single
a
window
is
a
child
object
of
the
desktop
contained
in
the
windows
registry
the
windows
registry
is
used
to
store
configuration
and
administrative
information
for
software
hardware
user
the
operating
regedit
